[
  {
    "objectID": "slides/week3.html#acknowledgment",
    "href": "slides/week3.html#acknowledgment",
    "title": "Exploratory Data Analysis",
    "section": "Acknowledgment",
    "text": "Acknowledgment\nThese slides were originally developed by Meredith Franklin. They have been modified by George G. Vega Yon and Kelly Street."
  },
  {
    "objectID": "slides/week3.html#exploratory-data-analysis",
    "href": "slides/week3.html#exploratory-data-analysis",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nExploratory data analysis is the process of becoming familiar with a dataset\nIt should be the first step in your analysis pipeline\nIt involves:\n\nchecking data (import issues, outliers, missing values, data errors)\ncleaning data\nsummary statistics of key variables (univariate and bivariate)\nbasic plots and graphs"
  },
  {
    "objectID": "slides/week3.html#exploratory-data-analysis-1",
    "href": "slides/week3.html#exploratory-data-analysis-1",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nSince our eyes and brains are not wired to detect patterns in large data tables filled with text and numbers, communication about data […] rarely comes in the form of raw data or code output. Instead, data and data-driven results are usually either summarized (e.g., using an average/mean) and presented in small summary tables or they are presented visually in the form of graphs, in which shape, distance, color, and size can be used to represent the magnitudes of (and relationships between) the values within our data.\n\n\nViridical Data Science, Yu and Barter"
  },
  {
    "objectID": "slides/week3.html#the-tidyverse-model",
    "href": "slides/week3.html#the-tidyverse-model",
    "title": "Exploratory Data Analysis",
    "section": "The Tidyverse Model",
    "text": "The Tidyverse Model\n\nLoosely, EDA encompasses the Import -&gt; Tidy -&gt; Transform -&gt; Visualize steps. Basically it is everything before we do modeling, prediction or inference.\nEDA may involve some statistical summaries, but it does not include formal statistical analysis."
  },
  {
    "objectID": "slides/week3.html#eda-checklist",
    "href": "slides/week3.html#eda-checklist",
    "title": "Exploratory Data Analysis",
    "section": "EDA Checklist",
    "text": "EDA Checklist\nThe goal of EDA is to better understand your data. Let’s use the checklist:\n\nRead in the data\nCheck the size of the data\nExamine the variables and their types\nLook at the top and bottom of the data\nCheck your expectations\nValidate with an external source\nFormulate a (simple) question\nTry the easy solution first\nChallenge your solution\n\n(adapted from Exploratory Data Analysis with R by Roger D. Peng)"
  },
  {
    "objectID": "slides/week3.html#case-study",
    "href": "slides/week3.html#case-study",
    "title": "Exploratory Data Analysis",
    "section": "Case study",
    "text": "Case study\nWe are going to use a dataset created from the National Center for Environmental Information (https://www.ncei.noaa.gov/). The data are 2019 hourly measurements from weather stations across the continental U.S."
  },
  {
    "objectID": "slides/week3.html#formulate-a-question",
    "href": "slides/week3.html#formulate-a-question",
    "title": "Exploratory Data Analysis",
    "section": "Formulate a Question",
    "text": "Formulate a Question\nIt is a good idea to first have a question such as:\n\nWhich weather stations reported the hottest and coldest daily temperatures?\nWhat day of the month was on average the hottest?\nIs there correlation between temperature and humidity in my dataset?"
  },
  {
    "objectID": "slides/week3.html#read-in-the-data",
    "href": "slides/week3.html#read-in-the-data",
    "title": "Exploratory Data Analysis",
    "section": "Read in the Data",
    "text": "Read in the Data\nThere are several ways to read in data (some depend on the type of data you have):\n\nread.table or read.csv in base R for delimited files\nreadRDS if you have a .rds dataset (this is a handy, compressed way of saving R objects)\nread_csv, read_csv2, read_delim, read_fwf from library(readr) that is part of the tidyverse\nreadxl() from library(readxl) for .xls and .xlsx files\nread_sas, read_spss, read_stata from library(haven)\nfread from library(data.table) for efficiently importing large datasets that are regular delimited files"
  },
  {
    "objectID": "slides/week3.html#read-in-the-data-1",
    "href": "slides/week3.html#read-in-the-data-1",
    "title": "Exploratory Data Analysis",
    "section": "Read in the Data",
    "text": "Read in the Data\nThere are plenty of ways to do these tasks, but we will focus on base R.\nSince our data is stored as a (gzipped) CSV file, we could load it into R with read.csv, but we will use the more flexible read.table. I have it stored locally, but we will see how to load it straight from GitHub in the lab.\n\nmet &lt;- read.table(file.path('..','..','data','met_all.gz'),\n                  header = TRUE, sep = ',')\n\nWe specify that the first line contains column names by setting header = TRUE and we indicate that commas are used to separate the different values (rather than tabs, spaces, etc.) by setting sep = ','."
  },
  {
    "objectID": "slides/week3.html#working-with-data.frames",
    "href": "slides/week3.html#working-with-data.frames",
    "title": "Exploratory Data Analysis",
    "section": "Working with data.frames",
    "text": "Working with data.frames\nThis gave as a data.frame object, which is a standard R format for cleaned, rectangular data. Each row represents an observation and each column represents a variable.\nAs we have seen, you can access particular parts of the data.frame by subsetting with the square brackets, [,]. For example, you can pull out the 2nd, 3rd, and 4th elements of the 1st column of our met dataset with met[2:4, 1].\nYou can also pull out specific columns by name, using the $ operator. Since the first column is called USAFID, we could access the same subset as above with met$USAFID[2:4] (notice that there is no comma here, because we have already subset down to a single variable).\nTo see the list of names for the dataset, you can use names(met) or colnames(met). To see the top few rows of the dataset, use head(met)."
  },
  {
    "objectID": "slides/week3.html#check-the-data",
    "href": "slides/week3.html#check-the-data",
    "title": "Exploratory Data Analysis",
    "section": "Check the data",
    "text": "Check the data\nWe should check the dimensions of the data set. This can be done several ways:\n\ndim(met)\n\n[1] 2377343      30\n\nnrow(met)\n\n[1] 2377343\n\nncol(met)\n\n[1] 30"
  },
  {
    "objectID": "slides/week3.html#check-the-data-1",
    "href": "slides/week3.html#check-the-data-1",
    "title": "Exploratory Data Analysis",
    "section": "Check the data",
    "text": "Check the data\n\nWe see that there are 2,377,343 records of hourly temperature in August 2019 from all of the weather stations in the US. The data set has 30 variables.\nWe should also check the top and bottom of the dataset to check for any irregularities. Use head(met) and tail(met) for this.\nNext we can take a deeper dive into the contents of the data with str()"
  },
  {
    "objectID": "slides/week3.html#check-variables",
    "href": "slides/week3.html#check-variables",
    "title": "Exploratory Data Analysis",
    "section": "Check variables",
    "text": "Check variables\n\nstr(met)\n\n'data.frame':   2377343 obs. of  30 variables:\n $ USAFID           : int  690150 690150 690150 690150 690150 690150 690150 690150 690150 690150 ...\n $ WBAN             : int  93121 93121 93121 93121 93121 93121 93121 93121 93121 93121 ...\n $ year             : int  2019 2019 2019 2019 2019 2019 2019 2019 2019 2019 ...\n $ month            : int  8 8 8 8 8 8 8 8 8 8 ...\n $ day              : int  1 1 1 1 1 1 1 1 1 1 ...\n $ hour             : int  0 1 2 3 4 5 6 7 8 9 ...\n $ min              : int  56 56 56 56 56 56 56 56 56 56 ...\n $ lat              : num  34.3 34.3 34.3 34.3 34.3 34.3 34.3 34.3 34.3 34.3 ...\n $ lon              : num  -116 -116 -116 -116 -116 ...\n $ elev             : int  696 696 696 696 696 696 696 696 696 696 ...\n $ wind.dir         : int  220 230 230 210 120 NA 320 10 320 350 ...\n $ wind.dir.qc      : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ wind.type.code   : chr  \"N\" \"N\" \"N\" \"N\" ...\n $ wind.sp          : num  5.7 8.2 6.7 5.1 2.1 0 1.5 2.1 2.6 1.5 ...\n $ wind.sp.qc       : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ ceiling.ht       : int  22000 22000 22000 22000 22000 22000 22000 22000 22000 22000 ...\n $ ceiling.ht.qc    : int  5 5 5 5 5 5 5 5 5 5 ...\n $ ceiling.ht.method: chr  \"9\" \"9\" \"9\" \"9\" ...\n $ sky.cond         : chr  \"N\" \"N\" \"N\" \"N\" ...\n $ vis.dist         : int  16093 16093 16093 16093 16093 16093 16093 16093 16093 16093 ...\n $ vis.dist.qc      : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ vis.var          : chr  \"N\" \"N\" \"N\" \"N\" ...\n $ vis.var.qc       : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ temp             : num  37.2 35.6 34.4 33.3 32.8 31.1 29.4 28.9 27.2 26.7 ...\n $ temp.qc          : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ dew.point        : num  10.6 10.6 7.2 5 5 5.6 6.1 6.7 7.8 7.8 ...\n $ dew.point.qc     : chr  \"5\" \"5\" \"5\" \"5\" ...\n $ atm.press        : num  1010 1010 1011 1012 1013 ...\n $ atm.press.qc     : int  5 5 5 5 5 5 5 5 5 5 ...\n $ rh               : num  19.9 21.8 18.5 16.9 17.4 ..."
  },
  {
    "objectID": "slides/week3.html#check-variables-1",
    "href": "slides/week3.html#check-variables-1",
    "title": "Exploratory Data Analysis",
    "section": "Check variables",
    "text": "Check variables\n\nFirst, we see that str() gives us the class of the data, which in this case is a data.frame, as well as the dimensions of the data\nWe also see the variable names and their type (integer, numeric, character, etc.)\nWe can identify major problems with the data at this stage (e.g. a variable that has all missing values)"
  },
  {
    "objectID": "slides/week3.html#check-variables-2",
    "href": "slides/week3.html#check-variables-2",
    "title": "Exploratory Data Analysis",
    "section": "Check variables",
    "text": "Check variables\nWe can get summary statistics on our data.frame using summary().\n\nsummary(met[,8:13])\n\n      lat             lon               elev           wind.dir     \n Min.   :24.55   Min.   :-124.29   Min.   : -13.0   Min.   :  3     \n 1st Qu.:33.97   1st Qu.: -98.02   1st Qu.: 101.0   1st Qu.:120     \n Median :38.35   Median : -91.71   Median : 252.0   Median :180     \n Mean   :37.94   Mean   : -92.15   Mean   : 415.8   Mean   :185     \n 3rd Qu.:41.94   3rd Qu.: -82.99   3rd Qu.: 400.0   3rd Qu.:260     \n Max.   :48.94   Max.   : -68.31   Max.   :9999.0   Max.   :360     \n                                                    NA's   :785290  \n wind.dir.qc        wind.type.code    \n Length:2377343     Length:2377343    \n Class :character   Class :character  \n Mode  :character   Mode  :character"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely",
    "href": "slides/week3.html#check-variables-more-closely",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nWe know that we are supposed to have hourly measurements of weather data for the month of August 2019 for the entire US. We should check that we have all of these components. Let’s check:\n\nthe year\nthe month\nthe hours\nthe range of locations (latitude and longitude)"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-1",
    "href": "slides/week3.html#check-variables-more-closely-1",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nWe can generate tables and/or barplots for integer variables:\n\ntable(met$hour)\n\n\n     0      1      2      3      4      5      6      7      8      9     10 \n 99434  93482  93770  96703 110504 112128 106235 101985 100310 102915 101880 \n    11     12     13     14     15     16     17     18     19     20     21 \n100470 103605  97004  96507  97635  94942  94184 100179  94604  94928  96070 \n    22     23 \n 94046  93823 \n\ntable(met$month)\n\n\n      8 \n2377343"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-2",
    "href": "slides/week3.html#check-variables-more-closely-2",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nWe can generate tables and/or barplots for integer variables:\n\nbarplot(table(met$hour))"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-3",
    "href": "slides/week3.html#check-variables-more-closely-3",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nFor numeric variables we should do a summary to see the quantiles, min, max, and mean.\n\ntable(met$year)\n\n\n   2019 \n2377343 \n\nsummary(met$lat)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.55   33.97   38.35   37.94   41.94   48.94 \n\nsummary(met$lon)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-124.29  -98.02  -91.71  -92.15  -82.99  -68.31"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-4",
    "href": "slides/week3.html#check-variables-more-closely-4",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nWe can visualize these distributions with a histogram.\n\nlayout(matrix(1:2, nrow=1))\nhist(met$lat)\nhist(met$lon)\n\n\n\n\n\n\n\nlayout(1)"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-5",
    "href": "slides/week3.html#check-variables-more-closely-5",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nIf we return to our initial question, what weather stations reported the hottest and coldest temperatures, we should take a closer look at our key variable, temperature (temp)\n\nsummary(met$temp)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n -40.00   19.60   23.50   23.59   27.80   56.00   60089 \n\nhist(met$temp)\n\n\nIt looks like the temperatures are in Celsius. A temperature of -40 in August is really cold, we should see if this is an implausible value."
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-6",
    "href": "slides/week3.html#check-variables-more-closely-6",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nIt also looks like there is a lot of missing data, encoded by NA values. Let’s check the proportion of missingness by tallying up whether or not every temperature reading is an NA. This will give us a vector of TRUE/FALSE values and then we can take the mean (average), because R automatically interprets TRUE as 1 and FALSE as 0 for mathematical functions.\n\nmean(is.na(met$temp))\n\n[1] 0.0252757\n\n\n2.5% of the data are missing, which is not a huge amount."
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-7",
    "href": "slides/week3.html#check-variables-more-closely-7",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nIn our data.frame we can easily subset the data and select certain columns. Here, we select all observations with a temperature of -40C and a specific subset of the variables:\n\nmet_ss &lt;- met[met$temp == -40.00, c('hour','lat','lon','elev','wind.sp')]\n\ndim(met_ss)\n\n[1] 60125     5\n\nsummary(met_ss)\n\n      hour            lat             lon              elev      \n Min.   : 0.00   Min.   :29.12   Min.   :-89.55   Min.   :36     \n 1st Qu.: 2.75   1st Qu.:29.12   1st Qu.:-89.55   1st Qu.:36     \n Median : 5.50   Median :29.12   Median :-89.55   Median :36     \n Mean   : 5.50   Mean   :29.12   Mean   :-89.55   Mean   :36     \n 3rd Qu.: 8.25   3rd Qu.:29.12   3rd Qu.:-89.55   3rd Qu.:36     \n Max.   :11.00   Max.   :29.12   Max.   :-89.55   Max.   :36     \n NA's   :60089   NA's   :60089   NA's   :60089    NA's   :60089  \n    wind.sp     \n Min.   : NA    \n 1st Qu.: NA    \n Median : NA    \n Mean   :NaN    \n 3rd Qu.: NA    \n Max.   : NA    \n NA's   :60125"
  },
  {
    "objectID": "slides/week3.html#check-variables-more-closely-8",
    "href": "slides/week3.html#check-variables-more-closely-8",
    "title": "Exploratory Data Analysis",
    "section": "Check variables more closely",
    "text": "Check variables more closely\nIn dplyr we can do the same thing using filter and select\n\nlibrary(dplyr)\nmet_ss &lt;- filter(met, temp == -40.00) |&gt; \n  select(USAFID, day, hour, lat, lon, elev, wind.sp)\n\ndim(met_ss)\n\n[1] 36  7\n\nsummary(met_ss)\n\n     USAFID            day         hour            lat             lon        \n Min.   :720717   Min.   :1   Min.   : 0.00   Min.   :29.12   Min.   :-89.55  \n 1st Qu.:720717   1st Qu.:1   1st Qu.: 2.75   1st Qu.:29.12   1st Qu.:-89.55  \n Median :720717   Median :1   Median : 5.50   Median :29.12   Median :-89.55  \n Mean   :720717   Mean   :1   Mean   : 5.50   Mean   :29.12   Mean   :-89.55  \n 3rd Qu.:720717   3rd Qu.:1   3rd Qu.: 8.25   3rd Qu.:29.12   3rd Qu.:-89.55  \n Max.   :720717   Max.   :1   Max.   :11.00   Max.   :29.12   Max.   :-89.55  \n                                                                              \n      elev       wind.sp   \n Min.   :36   Min.   : NA  \n 1st Qu.:36   1st Qu.: NA  \n Median :36   Median : NA  \n Mean   :36   Mean   :NaN  \n 3rd Qu.:36   3rd Qu.: NA  \n Max.   :36   Max.   : NA  \n              NA's   :36"
  },
  {
    "objectID": "slides/week3.html#validate-against-an-external-source",
    "href": "slides/week3.html#validate-against-an-external-source",
    "title": "Exploratory Data Analysis",
    "section": "Validate against an external source",
    "text": "Validate against an external source\nWe should check outside sources to make sure that our data makes sense. For example the observation with -40C is suspicious, so we should look up the location of the weather station.\nGo to Google maps and enter the coordinates for the site with -40C (29.12, -89.55)\n\nIt doesn’t make much sense to have a -40C reading in the Gulf of Mexico off the coast of Louisiana!"
  },
  {
    "objectID": "slides/week3.html#data-cleaning",
    "href": "slides/week3.html#data-cleaning",
    "title": "Exploratory Data Analysis",
    "section": "Data cleaning",
    "text": "Data cleaning\nIf we return to our initial question (“Which weather stations reported the hottest and coldest daily temperatures?”), we need to generate a list of weather stations that are ordered from highest to lowest. We can then examine the top and bottom of this new dataset.\nFirst let us remove the aberrant observations and then we’ll sort by temperature.\n\nmet &lt;- met[met$temp &gt; -40, ]\n\nNotice that we do not create a new object, we just overwrite the met object. Once you’re sure that you want to remove certain observations, this is a good way to avoid confusion (otherwise, it is easy to end up with multiple subsets of the data in your R environment with similar names like met, met_ss, met_ss2, met_final, met_FINAL, met_FINAL_REAL, etc.)"
  },
  {
    "objectID": "slides/week3.html#data-cleaning-1",
    "href": "slides/week3.html#data-cleaning-1",
    "title": "Exploratory Data Analysis",
    "section": "Data cleaning",
    "text": "Data cleaning\nWe will also remove any observations with missing temperature values (NA).\nThe is.na() function tells you whether or not a particular value is missing and the ! operator takes the opposite of a TRUE/FALSE value, so in combination, they tell you which observations are not missing.\n\nmet &lt;- met[!is.na(met$temp), ]"
  },
  {
    "objectID": "slides/week3.html#highest-and-lowest",
    "href": "slides/week3.html#highest-and-lowest",
    "title": "Exploratory Data Analysis",
    "section": "Highest and Lowest",
    "text": "Highest and Lowest\n\nhead(met)[,c(1,8:10,24)]\n\n        USAFID    lat    lon elev  temp\n1203053 722817 38.767 -104.3 1838 -17.2\n1203055 722817 38.767 -104.3 1838 -17.2\n1203128 722817 38.767 -104.3 1838 -17.2\n1203129 722817 38.767 -104.3 1838 -17.2\n1203222 722817 38.767 -104.3 1838 -17.2\n1203225 722817 38.767 -104.3 1838 -17.2\n\ntail(met)[,c(1,8:10,24)]\n\n      USAFID    lat      lon elev temp\n42783 720267 38.955 -121.081  467 52.0\n724   690150 34.300 -116.166  696 52.8\n749   690150 34.296 -116.162  625 52.8\n748   690150 34.300 -116.166  696 53.9\n701   690150 34.300 -116.166  696 54.4\n42403 720267 38.955 -121.081  467 56.0"
  },
  {
    "objectID": "slides/week3.html#summary-statistics",
    "href": "slides/week3.html#summary-statistics",
    "title": "Exploratory Data Analysis",
    "section": "Summary statistics",
    "text": "Summary statistics\nThe maximum hourly temperature is 56C at site 720267, and the minimum hourly temperature is -17.2C at site 722817."
  },
  {
    "objectID": "slides/week3.html#summary-statistics-1",
    "href": "slides/week3.html#summary-statistics-1",
    "title": "Exploratory Data Analysis",
    "section": "Summary statistics",
    "text": "Summary statistics\nWe need to transform our data to answer our initial question. Let’s find the daily mean, max, and min temperatures for each weather station in our data.frame. We can do this with the summarize function from the dplyr package. This package is part of the tidyverse, so the syntax is a bit different from what we’ve seen before.\n\nlibrary(dplyr)\nmet_daily &lt;- summarize(met,\n                       temp = mean(temp),\n                       lat = mean(lat),\n                       lon = mean(lon),\n                       elev = mean(elev),\n                       .by = c(USAFID, day))\n\nWhat we’ve done here is told R to summarize the met dataset by the variables USAFID and day, splitting the data into subsets based on those two indexing variables. For each subset (representing a specific station of a specific day), we want the daily average temperature, as well as latitude, longitude, and elevation (though hopefully those don’t change too much over the course of a day!)"
  },
  {
    "objectID": "slides/week3.html#summary-statistics-2",
    "href": "slides/week3.html#summary-statistics-2",
    "title": "Exploratory Data Analysis",
    "section": "Summary Statistics",
    "text": "Summary Statistics\nBefore we continue, check the relative sizes of the met and met_daily objects. Which one is bigger?"
  },
  {
    "objectID": "slides/week3.html#summary-statistics-3",
    "href": "slides/week3.html#summary-statistics-3",
    "title": "Exploratory Data Analysis",
    "section": "Summary Statistics",
    "text": "Summary Statistics\nNow we will order our new dataset by the average daily temperature, just as we ordered the old one by observed temperature.\n\nmet_daily &lt;- met_daily[order(met_daily$temp), ]\n\nhead(met_daily)\n\n    USAFID day       temp    lat    lon elev\n2   722817   3 -17.200000 38.767 -104.3 1838\n1   722817   1 -17.133333 38.767 -104.3 1838\n3   722817   6 -17.066667 38.767 -104.3 1838\n164 726130  11   4.278261 44.270  -71.3 1909\n166 726130  31   4.304348 44.270  -71.3 1909\n163 726130  10   4.583333 44.270  -71.3 1909\n\ntail(met_daily)\n\n      USAFID day     temp      lat       lon     elev\n48708 722749   5 40.85714 33.26900 -111.8120 379.0000\n48695 723805   5 40.97500 34.76800 -114.6180 279.0000\n48721 720339  14 41.00000 32.14600 -111.1710 737.0000\n48710 723805   4 41.18333 34.76800 -114.6180 279.0000\n48688 722787   5 41.35714 33.52700 -112.2950 325.0000\n48438 690150  31 41.71667 34.29967 -116.1657 690.0833"
  },
  {
    "objectID": "slides/week3.html#summary-statistics-4",
    "href": "slides/week3.html#summary-statistics-4",
    "title": "Exploratory Data Analysis",
    "section": "Summary statistics",
    "text": "Summary statistics\nThe maximum daily average temperature is 41.7166667 C at site 690150 and the minimum daily average temperature is -17.2C at site 722817."
  },
  {
    "objectID": "slides/week3.html#summary-statistics-5",
    "href": "slides/week3.html#summary-statistics-5",
    "title": "Exploratory Data Analysis",
    "section": "Summary statistics",
    "text": "Summary statistics\nThe code below is similar to our previous example, but doesn’t include the latitude, longitude, and elevation. How would you alter this code to find the daily median, max, or min temperatures for each station?\n\nsummarize(met,\n          temp = mean(temp),\n          .by = c(USAFID, day))\n\n(try it yourself)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs",
    "href": "slides/week3.html#exploratory-graphs",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory graphs",
    "text": "Exploratory graphs\nWith exploratory graphs we aim to:\n\ndebug any issues remaining in the data\nunderstand properties of the data\nlook for patterns in the data\ninform modeling strategies\n\nExploratory graphs do not need to be perfect, we will look at presentation ready plots next week."
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-1",
    "href": "slides/week3.html#exploratory-graphs-1",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory graphs",
    "text": "Exploratory graphs\nExamples of exploratory graphs include:\n\nhistograms\nboxplots\nscatterplots\nsimple maps"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-2",
    "href": "slides/week3.html#exploratory-graphs-2",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nFocusing on the variable of interest, temperature, let’s look at the distribution (after removing -40C)\n\nhist(met$temp)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-3",
    "href": "slides/week3.html#exploratory-graphs-3",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nLet’s look at the daily data\n\nhist(met_daily$temp)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-4",
    "href": "slides/week3.html#exploratory-graphs-4",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nA boxplot gives us an idea of the quantiles of the distribution and any outliers\n\nboxplot(met$temp, col = \"blue\")"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-5",
    "href": "slides/week3.html#exploratory-graphs-5",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nLet’s look at the daily data\n\nboxplot(met_daily$temp, col = \"blue\")"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-6",
    "href": "slides/week3.html#exploratory-graphs-6",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nWe know that these data come from US weather stations, so we might have some idea what to expect just from plotting the latitude and longitude (note that we fix the aspect ratio at 1:1 with asp = 1; this prevents the plot from stretching or shrinking to fit the available plotting area):\n\nplot(met_daily$lon, met_daily$lat, asp=1)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-7",
    "href": "slides/week3.html#exploratory-graphs-7",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nA map will show us where the weather stations are located. First let’s get the unique latitudes and longitudes and see how many meteorological sites there are\n\nmet_stations &lt;- (unique(met[,c(\"lat\",\"lon\")]))  \ndim(met_stations)\n\n[1] 2827    2"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-8",
    "href": "slides/week3.html#exploratory-graphs-8",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nA map will show us where the weather stations are located. First let’s get the unique latitudes and longitudes and see how many meteorological sites there are.\n\nlibrary(leaflet)\nleaflet(met_stations) |&gt; \n  addProviderTiles('CartoDB.Positron') |&gt; \n  addCircles(lat = ~lat, lng = ~lon,\n             opacity = 1, fillOpacity = 1, radius = 400)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-9",
    "href": "slides/week3.html#exploratory-graphs-9",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-10",
    "href": "slides/week3.html#exploratory-graphs-10",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nLet’s map the locations of the max and min daily temperatures.\n\nmin &lt;- met_daily[1, ]               # First observation\nmax &lt;- met_daily[nrow(met_daily), ] # Last observation\n\nleaflet() |&gt; \n  addProviderTiles('CartoDB.Positron') |&gt; \n  addCircles(\n    data = min,\n    lat = ~lat, lng = ~lon, popup = \"Min temp.\",\n    opacity = 1, fillOpacity = 1, radius = 400, color = \"blue\"\n    ) |&gt;\n  addCircles(\n    data = max,\n    lat = ~lat, lng = ~lon, popup = \"Max temp.\",\n    opacity=1, fillOpacity=1, radius = 400, color = \"red\"\n    )\n\n(next slide)"
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-11",
    "href": "slides/week3.html#exploratory-graphs-11",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nScatterplots help us look at pairwise relationships. Let’s see if there is any trend in temperature with latitude\n\nplot(met_daily$lat, met_daily$temp, pch=16, cex=0.5)\n\n\n\n\n\n\n\n\nThere is a clear decrease in temperatures as you increase in latitude (i.e as you go north)."
  },
  {
    "objectID": "slides/week3.html#exploratory-graphs-12",
    "href": "slides/week3.html#exploratory-graphs-12",
    "title": "Exploratory Data Analysis",
    "section": "Exploratory Graphs",
    "text": "Exploratory Graphs\nWe can add a simple linear regression line to this plot using lm() and abline(). We can also add a title and change the axis labels.\n\nmod &lt;- lm(temp ~ lat, data = met_daily)\nmet_daily[, plot(\n  lat, temp, pch=19, cex=0.5, \n  main = \"Temperature and Latitude\", \n  xlab = \"Latitude\", ylab = \"Temperature (deg C)\")\n  ]\nabline(mod, lwd=2, col=\"red\")\n\n(next slide)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Intro to PHDS",
    "section": "",
    "text": "Term: Fall 2024\nTime: Friday 9am - 12:55pm\nLocation: SSB 114\nGitHub"
  },
  {
    "objectID": "index.html#pm-566-introduction-to-health-data-science",
    "href": "index.html#pm-566-introduction-to-health-data-science",
    "title": "Intro to PHDS",
    "section": "",
    "text": "Term: Fall 2024\nTime: Friday 9am - 12:55pm\nLocation: SSB 114\nGitHub"
  }
]